[
    {
        "id": "e184de2d.f9883",
        "type": "tab",
        "label": "BLE2MQTT2INFLUX",
        "disabled": false,
        "info": ""
    },
    {
        "id": "211dbd92.7c49e2",
        "type": "function",
        "z": "e184de2d.f9883",
        "name": "TLM",
        "func": "var tokens  = msg.topic.split(\"/\");\nmsg.topic   =tokens[3];       //get device  name from topic  level 3 /v1.6/devices/tokens[3]\nvar dest    = tokens[tokens.length-1];\ninputjson   =JSON.parse(msg.payload);\nvar _fields = {};\nfor(var item in inputjson){\n    if (item.includes('Data') || item.includes(\"ts\")){}\n    else\n    {\n    _fields[item] = inputjson[item];}\n}\n\nvar tags = {\n            mac: inputjson['mac'],\n            edgeMAC: inputjson['edgeMAC']\n        } ;\n\nmsg.payload = [ \n    {        //device name as measurement\n        measurement: \"tlm_measurements\",\n        tags,\n        fields: _fields\n    }\n    ];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 160,
        "wires": [
            [
                "955726d0.7886b8"
            ]
        ]
    },
    {
        "id": "4b425dc7.05fe24",
        "type": "switch",
        "z": "e184de2d.f9883",
        "name": "",
        "property": "payload.dataFormat",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "12",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 525,
        "y": 156,
        "wires": [
            [
                "4672a641.6e33b8"
            ],
            [
                "42b4cd3a.5b1b64"
            ],
            [
                "c37f1e0d.fe8bf"
            ],
            [
                "c37f1e0d.fe8bf"
            ]
        ]
    },
    {
        "id": "953817ff.3a4d08",
        "type": "json",
        "z": "e184de2d.f9883",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 355,
        "y": 156,
        "wires": [
            [
                "4b425dc7.05fe24"
            ]
        ]
    },
    {
        "id": "42b4cd3a.5b1b64",
        "type": "json",
        "z": "e184de2d.f9883",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 160,
        "wires": [
            [
                "211dbd92.7c49e2"
            ]
        ]
    },
    {
        "id": "fe884652.0b6638",
        "type": "function",
        "z": "e184de2d.f9883",
        "name": "Ruuvi",
        "func": "var tokens  = msg.topic.split(\"/\");\nmsg.topic   =tokens[3];       //get device  name from topic  level 3 /v1.6/devices/tokens[3]\ninputjson   =JSON.parse(msg.payload);\nvar _fields = {};\nfor(var item in inputjson){\n    if (item.includes('Data') || item.includes(\"ts\")){}\n    else\n    {\n    _fields[item] = inputjson[item];}\n}\n\nvar tags = {\n            mac: inputjson['mac'],\n            edgeMAC: inputjson['edgeMAC']\n        } ;\n\nmsg.payload = [ \n    {\n        measurement: \"ruuvi_measurements\" ,\n        tags,     //device name as measurement\n        fields: _fields\n    },\n    ];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 200,
        "wires": [
            [
                "955726d0.7886b8"
            ]
        ]
    },
    {
        "id": "c37f1e0d.fe8bf",
        "type": "json",
        "z": "e184de2d.f9883",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 200,
        "wires": [
            [
                "fe884652.0b6638"
            ]
        ]
    },
    {
        "id": "14d5955a.a27f1b",
        "type": "mqtt in",
        "z": "e184de2d.f9883",
        "name": "",
        "topic": "home/+/beacon/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "4be5debe.f3d7a",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "953817ff.3a4d08"
            ]
        ]
    },
    {
        "id": "429320e6.b803",
        "type": "comment",
        "z": "e184de2d.f9883",
        "name": "Beacons",
        "info": "",
        "x": 80,
        "y": 120,
        "wires": []
    },
    {
        "id": "4672a641.6e33b8",
        "type": "json",
        "z": "e184de2d.f9883",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 725,
        "y": 116,
        "wires": [
            [
                "911eb92c.6d5d18"
            ]
        ]
    },
    {
        "id": "911eb92c.6d5d18",
        "type": "function",
        "z": "e184de2d.f9883",
        "name": "Unknown",
        "func": "var tokens  = msg.topic.split(\"/\");\nmsg.topic   =tokens[3];       //get device  name from topic  level 3 /v1.6/devices/tokens[3]\nvar dest    = tokens[tokens.length-1];\ninputjson   =JSON.parse(msg.payload);\nvar _fields = {};\nfor(var item in inputjson){\n    if (item.includes('Data') || item.includes(\"ts\")){}\n    else\n    {\n    _fields[item] = inputjson[item];}\n}\n\nvar tags = {\n            mac: inputjson['mac'],\n            edgeMAC: inputjson['edgeMAC']\n        } ;\n\nmsg.payload = [ \n    {        //device name as measurement\n        measurement: \"unknown_measurements\",\n        tags,\n        fields: _fields\n    }\n    ];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 895,
        "y": 116,
        "wires": [
            [
                "955726d0.7886b8"
            ]
        ]
    },
    {
        "id": "955726d0.7886b8",
        "type": "influxdb batch",
        "z": "e184de2d.f9883",
        "influxdb": "c598a3ff.40fa6",
        "precision": "",
        "retentionPolicy": "",
        "name": "",
        "x": 1150,
        "y": 180,
        "wires": []
    },
    {
        "id": "9eb65936.d6f5d8",
        "type": "mqtt in",
        "z": "e184de2d.f9883",
        "name": "",
        "topic": "home/linux/+/heartbeat",
        "qos": "0",
        "datatype": "auto",
        "broker": "4be5debe.f3d7a",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "b6fa4ac1.642a68"
            ]
        ]
    },
    {
        "id": "48c1ea85.0f7de4",
        "type": "comment",
        "z": "e184de2d.f9883",
        "name": "Heartbeat",
        "info": "",
        "x": 80,
        "y": 240,
        "wires": []
    },
    {
        "id": "b6fa4ac1.642a68",
        "type": "function",
        "z": "e184de2d.f9883",
        "name": "Heartbeat",
        "func": "var tokens  = msg.topic.split(\"/\");\nmsg.topic   =tokens[3];       //get device  name from topic  level 3 /v1.6/devices/tokens[3]\nvar dest    = tokens[tokens.length-1];\ninputjson   =JSON.parse(msg.payload);\nvar _fields = {};\nfor(var item in inputjson){\n    if (item.includes('Data') || item.includes(\"ts\")){}\n    else\n    {\n    _fields[item] = inputjson[item];}\n}\n\nvar tags = {\n            edgeMac: inputjson['edgeMAC'],\n            edgeType: inputjson['type']\n        } ;\n\nmsg.payload = [ \n    {\n        measurement: \"heartbeat_measurements\",\n        tags,     //device name as measurement\n        fields: _fields\n    },\n    ];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 300,
        "wires": [
            [
                "955726d0.7886b8"
            ]
        ]
    },
    {
        "id": "4be5debe.f3d7a",
        "type": "mqtt-broker",
        "z": "",
        "name": "mqtt",
        "broker": "192.168.8.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "c598a3ff.40fa6",
        "type": "influxdb",
        "z": "",
        "hostname": "192.168.8.1",
        "port": "8086",
        "protocol": "http",
        "database": "ruuvi",
        "name": "ruuvi",
        "usetls": false,
        "tls": "c01d971f.348e88"
    },
    {
        "id": "c01d971f.348e88",
        "type": "tls-config",
        "z": "",
        "name": "local-tls",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "verifyservercert": false
    }
]