[
    {
        "id": "a57f3dfc.89dab",
        "type": "tab",
        "label": "BLE2MQTT2INFLUX",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7e465370.ac86ac",
        "type": "function",
        "z": "a57f3dfc.89dab",
        "name": "TLM",
        "func": "var tokens  = msg.topic.split(\"/\");\nmsg.topic   =tokens[3];       //get device  name from topic  level 3 /v1.6/devices/tokens[3]\nvar dest    = tokens[tokens.length-1];\ninputjson   =JSON.parse(msg.payload);\nvar _fields = {};\nfor(var item in inputjson){\n    if (item.includes('Data') || item.includes(\"ts\")){}\n    else\n    {\n    _fields[item] = inputjson[item];}\n}\n\nvar tags = {mac: inputjson['mac'],\n            edgeMAC: inputjson['edgeMAC']} ;\n\nfor(var item in inputjson){\n    if (item.includes('name')){\n        tags[item] = inputjson[item];\n    }\n    else{}\n}\n\nmsg.payload = [ \n    {        //device name as measurement\n        measurement: \"tlm_measurements\",\n        tags,\n        fields: _fields\n    }\n    ];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 160,
        "wires": [
            [
                "1ff35b8c.120f34"
            ]
        ]
    },
    {
        "id": "e2254fd.a31b5b",
        "type": "switch",
        "z": "a57f3dfc.89dab",
        "name": "",
        "property": "payload.dataFormat",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "11",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "12",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "13",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 525,
        "y": 156,
        "wires": [
            [
                "480aa838.c33728"
            ],
            [
                "36043169.43a1be"
            ],
            [
                "36043169.43a1be"
            ],
            [
                "c2d87d46.d51e2"
            ],
            [
                "36043169.43a1be"
            ],
            [
                "36043169.43a1be"
            ],
            [
                "36043169.43a1be"
            ]
        ]
    },
    {
        "id": "6fb1e240.3c091c",
        "type": "json",
        "z": "a57f3dfc.89dab",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 355,
        "y": 156,
        "wires": [
            [
                "e2254fd.a31b5b"
            ]
        ]
    },
    {
        "id": "c2d87d46.d51e2",
        "type": "json",
        "z": "a57f3dfc.89dab",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 160,
        "wires": [
            [
                "7e465370.ac86ac"
            ]
        ]
    },
    {
        "id": "40e0dfdb.d14b6",
        "type": "function",
        "z": "a57f3dfc.89dab",
        "name": "Ruuvi",
        "func": "var tokens  = msg.topic.split(\"/\");\nmsg.topic   =tokens[3];       //get device  name from topic  level 3 /v1.6/devices/tokens[3]\ninputjson   =JSON.parse(msg.payload);\nvar _fields = {};\nfor(var item in inputjson){\n    if (item.includes('Data') || item.includes(\"ts\")){}\n    else\n    {\n    _fields[item] = inputjson[item];}\n}\n\nvar tags = {mac: inputjson['mac'],\n            edgeMAC: inputjson['edgeMAC']} ;\n\nfor(var item in inputjson){\n    if (item.includes('name')){\n        tags[item] = inputjson[item];\n    }\n    else{}\n}\n\nmsg.payload = [ \n    {\n        measurement: \"ruuvi_measurements\" ,\n        tags,     //device name as measurement\n        fields: _fields\n    },\n    ];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 890,
        "y": 200,
        "wires": [
            [
                "1ff35b8c.120f34"
            ]
        ]
    },
    {
        "id": "36043169.43a1be",
        "type": "json",
        "z": "a57f3dfc.89dab",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 200,
        "wires": [
            [
                "40e0dfdb.d14b6"
            ]
        ]
    },
    {
        "id": "79cba41e.e517fc",
        "type": "mqtt in",
        "z": "a57f3dfc.89dab",
        "name": "",
        "topic": "home/+/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "7ea27770.f00488",
        "x": 80,
        "y": 160,
        "wires": [
            [
                "6fb1e240.3c091c"
            ]
        ]
    },
    {
        "id": "2dc486c4.e8a40a",
        "type": "comment",
        "z": "a57f3dfc.89dab",
        "name": "Beacons",
        "info": "Change home to location being used",
        "x": 80,
        "y": 120,
        "wires": []
    },
    {
        "id": "480aa838.c33728",
        "type": "json",
        "z": "a57f3dfc.89dab",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 725,
        "y": 116,
        "wires": [
            [
                "92609fef.caa72"
            ]
        ]
    },
    {
        "id": "92609fef.caa72",
        "type": "function",
        "z": "a57f3dfc.89dab",
        "name": "Unknown",
        "func": "var tokens  = msg.topic.split(\"/\");\nmsg.topic   =tokens[3];       //get device  name from topic  level 3 /v1.6/devices/tokens[3]\nvar dest    = tokens[tokens.length-1];\ninputjson   =JSON.parse(msg.payload);\nvar _fields = {};\nfor(var item in inputjson){\n    if (item.includes('Data') || item.includes(\"ts\")){}\n    else\n    {\n    _fields[item] = inputjson[item];}\n}\n\nvar tags = {mac: inputjson['mac'],\n            edgeMAC: inputjson['edgeMAC']} ;\n\nfor(var item in inputjson){\n    if (item.includes('name')){\n        tags[item] = inputjson[item];\n    }\n    else{}\n}\n\nmsg.payload = [ \n    {        //device name as measurement\n        measurement: \"unknown_measurements\",\n        tags,\n        fields: _fields\n    }\n    ];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 895,
        "y": 116,
        "wires": [
            [
                "1ff35b8c.120f34"
            ]
        ]
    },
    {
        "id": "1ff35b8c.120f34",
        "type": "influxdb batch",
        "z": "a57f3dfc.89dab",
        "influxdb": "c86ff7aa.877878",
        "precision": "",
        "retentionPolicy": "",
        "name": "",
        "x": 1150,
        "y": 180,
        "wires": []
    },
    {
        "id": "7f97c1e4.88eed",
        "type": "mqtt in",
        "z": "a57f3dfc.89dab",
        "name": "",
        "topic": "heartbeat/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "7ea27770.f00488",
        "x": 90,
        "y": 300,
        "wires": [
            [
                "953d51ca.f4144"
            ]
        ]
    },
    {
        "id": "fee00e0.05672f",
        "type": "comment",
        "z": "a57f3dfc.89dab",
        "name": "Heartbeat",
        "info": "",
        "x": 80,
        "y": 240,
        "wires": []
    },
    {
        "id": "953d51ca.f4144",
        "type": "function",
        "z": "a57f3dfc.89dab",
        "name": "Heartbeat",
        "func": "var tokens  = msg.topic.split(\"/\");\nmsg.topic   =tokens[3];       //get device  name from topic  level 3 /v1.6/devices/tokens[3]\nvar dest    = tokens[tokens.length-1];\ninputjson   =JSON.parse(msg.payload);\nvar _fields = {};\nfor(var item in inputjson){\n    if (item.includes('Data') || item.includes(\"ts\")){}\n    else\n    {\n    _fields[item] = inputjson[item];}\n}\n\nvar tags = {\n            edgeMac: inputjson['edgeMAC'],\n            edgeType: inputjson['type']\n        } ;\n\nmsg.payload = [ \n    {\n        measurement: \"heartbeat_measurements\",\n        tags,     //device name as measurement\n        fields: _fields\n    },\n    ];\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 300,
        "wires": [
            [
                "1ff35b8c.120f34"
            ]
        ]
    },
    {
        "id": "7ea27770.f00488",
        "type": "mqtt-broker",
        "z": "",
        "name": "mqtt",
        "broker": "192.168.8.1",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "c86ff7aa.877878",
        "type": "influxdb",
        "z": "",
        "hostname": "192.168.8.1",
        "port": "8086",
        "protocol": "http",
        "database": "ruuvi",
        "name": "ruuvi",
        "usetls": false,
        "tls": "e3ca172.d4b94e8"
    },
    {
        "id": "e3ca172.d4b94e8",
        "type": "tls-config",
        "z": "",
        "name": "local-tls",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "verifyservercert": false
    }
]